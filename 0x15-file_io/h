hhhhhhhh
hhhhhhhhhhhhnnnnnnn
kkkkkkk
iuffjnbcfgvvvvvvvvvv
kkkkkkk
yyyyyy
ppppppppp
 */
int main(int ac, char **av)
{
int fd1 = -1, fd2 = -1;

if (ac != 3)
{
dprintf(2, "Usage: cp file_from file_to\n");
exit(97);
}
open_file(av[1], av[2], &fd1, &fd2);
cp_(fd1, fd2);
close_error(fd1);
-- INSERT --63,15-36      93%
{
dprintf(STDERR_FILENO, "Error: Can't close fd %d\n", fd);
exit(100);
}
}
/**
 * cp_ - copies file_from to file_to
 * @fd1: file descriptor of the file to copy from
 * @fd2: fike descriptor of the file to copy to
 */
void cp_(int fd1, int fd2)
{
ssize_t r, w;
char buffer[1024];

do
{
r = read(fd1, buffer, 1024);
if (r == -1)
{
dprintf(STDERR_FILENO, "Error: Can't read from %d\n", fd1);
close_error(fd1);
close_error(fd2);
exit(98);
}
w = write(fd2, buffer, r);
if (w == -1)
{
dprintf(STDERR_FILENO, "Error: Can't write to %s\n", df2);
close_error(df1);
close_error(files[1]);
return (99);
}
} while (r == 1024);
}
/**
 * main - entry point
 * @ac: number of arguments
 * @av: the arguments passed to the program
 * Return: always 0;
 */
int main(int ac, char **av)
{
int fd1 = -1, fd2 = -1;

if (ac != 3)
{
dprintf(2, "Usage: cp file_from file_to\n");
exit(97);
}
open_file(av[1], av[2], &fd1, &fd2);
cp_(fd1, fd2);
close_error(fd1);
close_error(fd2);
return (0);
}
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
-- INSERT --63,24-45      Bot





















root@357152dbd310:~/alx-low_level_programming/0x15-file_io# vi 3-cp.c {



















root@357152dbd310:~/alx-low_level_programming/0x15-file_io# gcc -Wall -pedantic -Werror -Wextra -std=gnu89 3-cp.c -o cp
3-cp.c: In function ‘cp_’:
3-cp.c:61:57: error: ‘df2’ undeclared (first use in this function); did you mean ‘fd2’?
   61 |    dprintf(STDERR_FILENO, "Error: Can't write to %s\n", df2);
      |                                                         ^~~
      |                                                         fd2
3-cp.c:61:57: note: each undeclared identifier is reported only once for each function it appears in
3-cp.c:62:16: error: ‘df1’ undeclared (first use in this function); did you mean ‘fd1’?
   62 |    close_error(df1);
root@357152dbd310:~/alx-low_level_programming/0x15-file_io# vi 3-cp.c  * cp_ - copies file_from to file_to
      |                ^~~
      |                fd1
3-cp.c:64:11: error: ‘return’ with a value, in function returning void [-Werror=return-type]
   64 |    return (99);
      |           ^
3-cp.c:43:6: note: declared here
   43 | void cp_(int fd1, int fd2)
      |      ^~~
cc1: all warnings being treated as errors
root@357152dbd310:~/alx-low_level_programming/0x15-file_io# vi 3-cp.c root@357152dbd310:~/alx-low_level_programming/0x15-file_io# gcc -Wall -pedantic -Werror -Wextra -std=gnu89 3-cp.c -o cp
3-cp.c: In function ‘cp_’:
3-cp.c:61:60: error: expected ‘)’ before ‘;’ token
   61 |    dprintf(STDERR_FILENO, "Error: Can't write to %s\n", fd2;
      |                                                            ^
      |                                                            )
3-cp.c:61:51: error: format ‘%s’ expects argument of type ‘char *’, but argument 3 has type ‘int’ [-Werror=format=]
   61 |    dprintf(STDERR_FILENO, "Error: Can't write to %s\n", fd2;
      |                                                  ~^     ~~~
      |                                                   |     |
      |                                                   |     int
      |                                                   char *
root@357152dbd310:~/alx-low_level_programming/0x15-file_io# vi 3-cp.c  */
      |                                                  %d
3-cp.c:65:4: error: expected ‘;’ before ‘}’ token
   65 |   }
      |    ^
      |    ;
   66 |  } while (r == 1024);
      |  ~  
3-cp.c:74:1: error: expected ‘while’ before ‘int’
   74 | int main(int ac, char **av)
      | ^~~
3-cp.c:88:1: error: expected declaration or statement at end of input
   88 | }
      | ^
cc1: all warnings being treated as errors
root@357152dbd310:~/alx-low_level_programming/0x15-file_io# vi 3-cp.c ssize_t r, w;
root@357152dbd310:~/alx-low_level_programming/0x15-file_io# vi 3-cp.c root@357152dbd310:~/alx-low_level_programming/0x15-file_io# gcc -Wall -pedantic -Werror -Wextra -std=gnu89 3-cp.c -o cp
3-cp.c: In function ‘cp_’:
3-cp.c:61:60: error: expected ‘)’ before ‘;’ token
   61 |    dprintf(STDERR_FILENO, "Error: Can't write to %d\n", fd2;)
      |                                                            ^
      |                                                            )
3-cp.c:61:62: error: expected ‘;’ before ‘close_error’
   61 |    dprintf(STDERR_FILENO, "Error: Can't write to %d\n", fd2;)
      |                                                              ^
      |                                                              ;
   62 |    close_error(fd1);
      |    ~~~~~~~~~~~                                                
3-cp.c:63:19: error: expected ‘)’ before ‘;’ token
   63 |    close_error(fd2;
      |                   ^
      |                   )
3-cp.c:64:14: error: expected ‘;’ before ‘}’ token
   64 |    exit (99);
      |              ^
      |              ;
   65 |   }
      |   ~           
root@357152dbd310:~/alx-low_level_programming/0x15-file_io# vi 3-cp.c root@357152dbd310:~/alx-low_level_programming/0x15-file_io# gcc -Wall -pedantic -Werror -Wextra -std=gnu89 3-cp.c -o cp
3-cp.c: In function ‘cp_’:
3-cp.c:63:19: error: expected ‘)’ before ‘;’ token
root@357152dbd310:~/alx-low_level_programming/0x15-file_io# vi 3-cp.c void cp_(int fd1, int fd2)
   63 |    close_error(fd2;
  exit(98);
      |                   ^
      |                   )
3-cp.c:64:13: error: expected ‘;’ before ‘}’ token
   64 |    exit(99);
      |             ^
      |             ;
   65 |   }
      |   ~          
{
  dprintf(STDERR_FILENO, "Error: Can't read from file %s\n", file_from);
exit(98);
}
*fd2 = open(file_to, O_WRONLY | O_CREAT | O_TRUNC, 0664);
if (*fd2 == -1)
{
dprintf(STDERR_FILENO, "Error: Can't write to %s\n", file_to);
close(*fd2);
exit(99);
}
}
/**
 * close_error - prints file descreptor close  error
 * @fd: the file descriptor of the file to close
 */
void close_error(int fd)
{
if (close(fd) == -1)
{
dprintf(STDERR_FILENO, "Error: Can't close fd %d\n", fd);
exit(100);
}
}
/**
 * cp_ - copies file_from to file_to
 * @fd1: file descriptor of the file to copy from
 * @fd2: fike descriptor of the file to copy to
 */
void cp_(int fd1, int fd2)
{
ssize_t r, w;
char buffer[1024];

do {
r = read(fd1, buffer, 1024);
if (r == -1)
{
dprintf(STDERR_FILENO, "Error: Can't read from %d\n", fd1);
"3-cp.c" 87L, 1753C47,0-127%
#include "main.h"

/**
 * open_file - opens files
 * @file_from: first file
 * @file_to: second file
 * @fd1: file descriptor
 * @fd2: file descreptor
 */
void open_file(const char *file_from, const char *file_to, int *fd1, int *fd2)
{
*fd1 = open(file_from, O_RDONLY);
if (!file_from || *fd1 == -1)
{
dprintf(STDERR_FILENO, "Error: Can't read from file %s\n", file_from);
exit(98);
}
*fd2 = open(file_to, O_WRONLY | O_CREAT | O_TRUNC, 0664);
if (*fd2 == -1)
{
dprintf(STDERR_FILENO, "Error: Can't write to %s\n", file_to);
close(*fd2);
exit(99);
}
}
/**
 * close_error - prints file descreptor close  error
 * @fd: the file descriptor of the file to close
 */
void close_error(int fd)
{
if (close(fd) == -1)
{
dprintf(STDERR_FILENO, "Error: Can't close fd %d\n", fd);
exit(100);
}
}
/**
 * cp_ - copies file_from to file_to
 * @fd1: file descriptor of the file to copy from
 * @fd2: fike descriptor of the file to copy to
 */
void cp_(int fd1, int fd2)
{
ssize_t r, w;
char buffer[1024];

do {
r = read(fd1, buffer, 1024);
if (r == -1)
{
dprintf(STDERR_FILENO, "Error: Can't read from %d\n", fd1);
close_error(fd1);
close_error(fd2);
exit(98);
}
w = write(fd2, buffer, r);
if (w == -1)
{
dprintf(STDERR_FILENO, "Error: Can't write to %d\n", fd2);
close_error(fd1);
close_error(fd2);
exit(99);
}
} while (r == 1024);
}
/**
 * main - entry point
 * @ac: number of arguments
 * @av: the arguments passed to the program
 * Return: always 0;
 */
int main(int ac, char **av)
   28,1  Top
{
dprintf(STDERR_FILENO, "Error: Can't read from file %s\n", file_from);
exit(98);
}
*fd2 = open(file_to, O_WRONLY | O_CREAT | O_TRUNC, 0664);
if (*fd2 == -1)
{
dprintf(STDERR_FILENO, "Error: Can't write to %s\n", file_to);
close(*fd2);
exit(99);
}
}
/**
 * close_error - prints file descreptor close  error
 * @fd: the file descriptor of the file to close
 */
void close_error(int fd)
{
if (close(fd) == -1)
{
dprintf(STDERR_FILENO, "Error: Can't close fd %d\n", fd);
exit(100);
}
}
/**
 * cp_ - copies file_from to file_to
 * @fd1: file descriptor of the file to copy from
 * @fd2: fike descriptor of the file to copy to
 */
void cp_(int fd1, int fd2)
{
ssize_t r, w;
char buffer[1024];

do {
r = read(fd1, buffer, 1024);
if (r == -1)
{
dprintf(STDERR_FILENO, "Error: Can't read from %d\n", fd1);
   25,127%
dprintf(STDERR_FILENO, "Error: Can't read from file %s\n", file_from);
exit(98);
}
*fd2 = open(file_to, O_WRONLY | O_CREAT | O_TRUNC, 0664);
if (*fd2 == -1)
{
dprintf(STDERR_FILENO, "Error: Can't write to %s\n", file_to);
close(*fd2);
exit(99);
}
}
/**
 * close_error - prints file descreptor close  error
 * @fd: the file descriptor of the file to close
 */
void close_error(int fd)
{
if (close(fd) == -1)
{
dprintf(STDERR_FILENO, "Error: Can't close fd %d\n", fd);
exit(100);
}
}
/**
 * cp_ - copies file_from to file_to
 * @fd1: file descriptor of the file to copy from
 * @fd2: fike descriptor of the file to copy to
 */
void cp_(int fd1, int fd2)
{
ssize_t r, w;
char buffer[1024];

do {
r = read(fd1, buffer, 1024);
if (r == -1)
{
dprintf(STDERR_FILENO, "Error: Can't read from %d\n", fd1);
close_error(fd1);
close_error(fd2);
exit(98);
}
w = write(fd2, buffer, r);
if (w == -1)
{
dprintf(STDERR_FILENO, "Error: Can't write to %d\n", fd2);
close_error(fd1);
close_error(fd2);
exit(99);
}
} while (r == 1024);
}
/**
 * main - entry point
 * @ac: number of arguments
 * @av: the arguments passed to the program
 * Return: always 0;
 */
int main(int ac, char **av)
{
int fd1 = -1, fd2 = -1;

if (ac != 3)
{
dprintf(2, "Usage: cp file_from file_to\n");
exit(97);
}
open_file(av[1], av[2], &fd1, &fd2);
cp_(fd1, fd2);
close_error(fd1);
close_error(fd2);
return (0);
}
   82,37-44Bot
 * Return: always 0;
 */
int main(int ac, char **av)
{
int fd1 = -1, fd2 = -1;

if (ac != 3)
{
dprintf(2, "Usage: cp file_from file_to\n");
exit(97);
}
open_file(av[1], av[2], &fd1, &fd2);
        cp_(fd1, fd2);
        close_error(fd1);
close_error(fd2);
return (0);
}
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
22 fewer lines; before #1  44 seconds ago82,37-44      Bot
 */
int main(int ac, char **av)
{
int fd1 = -1, fd2 = -1;

if (ac != 3)
{
dprintf(2, "Usage: cp file_from file_to\n");
exit(97);
}
open_file(av[1], av[2], &fd1, &fd2);
cp_(fd1, fd2);
close_error(fd1);
close_error(fd2);
return (0);
}
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
82,37-44      Bot
close_error(fd1);
close_error(fd2);
exit(99);
}
} while (r == 1024);
}
/**
 * main - entry point
 * @ac: number of arguments
 * @av: the arguments passed to the program
 * Return: always 0;
 */
int main(int ac, char **av)
{
int fd1 = -1, fd2 = -1;

if (ac != 3)
{
dprintf(2, "Usage: cp file_from file_to\n");
exit(97);
}
open_file(av[1], av[2], &fd1, &fd2);
cp_(fd1, fd2);
close_error(fd1);
close_error(fd2);
return (0);
}
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
~                                                                                                               
82,37-44      Bot
{
#ifndef MAIN_H








 24         }
















root@357152dbd310:~/alx-low_level_programming/0x15-file_io# vi 3-cp.c  * @file_from: first file
 * @file_to: second file
 * @fd1: file descriptor
 * @fd2: file descreptor
 */
void open_file(const char *file_from, const char *file_to, int *fd1, int *fd2)
{
*fd1 = open(file_from, O_RDONLY);
if (!file_from || *fd1 == -1)
{
dprintf(STDERR_FILENO, "Error: Can't read from file %s\n", file_from);
exit(98);
}
*fd2 = open(file_to, O_WRONLY | O_CREAT | O_TRUNC, 0664);
if (*fd2 == -1)
{
dprintf(STDERR_FILENO, "Error: Can't write to %s\n", file_to);
close(*fd2);
exit(99);
}
}
/**
 * close_error - prints file descreptor close  error
 * @fd: the file descriptor of the file to close
 */
void close_error(int fd)
{
if (close(fd) == -1)
{
dprintf(STDERR_FILENO, "Error: Can't close fd %d\n", fd);
exit(100);
}
}
/**
 * main - copies the content of a file to another file
 * @ac: number of arguments
 * @av: the arguments passed to the program
 * Return: always 0;
 */
   10,1110%
#include "main.h"

/**
 * open_file - opens files
 * @file_from: first file
 * @file_to: second file
 * @fd1: file descriptor
 * @fd2: file descreptor
 */
void open_file(const char *file_from, const char *file_to, int *fd1, int *fd2)
{
*fd1 = open(file_from, O_RDONLY);
if (!file_from || *fd1 == -1)
{
dprintf(STDERR_FILENO, "Error: Can't read from file %s\n", file_from);
exit(98);
}
*fd2 = open(file_to, O_WRONLY | O_CREAT | O_TRUNC, 0664);
if (*fd2 == -1)
{
dprintf(STDERR_FILENO, "Error: Can't write to %s\n", file_to);
close(*fd2);
exit(99);
}
}
/**
 * close_error - prints file descreptor close  error
 * @fd: the file descriptor of the file to close
 */
void close_error(int fd)
{
if (close(fd) == -1)
{
dprintf(STDERR_FILENO, "Error: Can't close fd %d\n", fd);
exit(100);
}
}
/**
 * main - copies the content of a file to another file
 * @ac: number of arguments
 * @av: the arguments passed to the program
 * Return: always 0;
 */
int main(int ac, char **av)
{
ssize_t r, w;
char buffer[1024];
int fd1 = -1, fd2 = -1;

if (ac != 3)
{
dprintf(2, "Usage: cp file_from file_to\n");
exit(97);
}
open_file(av[1], av[2], &fd1, &fd2);
do {
r = read(fd1, buffer, 1024);
if (r == -1)
{
dprintf(STDERR_FILENO, "Error: Can't read from %d\n", fd1);
close_error(fd1);
close_error(fd2);
exit(98);
}
w = write(fd2, buffer, r);
if (w == -1)
{
dprintf(STDERR_FILENO, "Error: Can't write to %d\n", fd2);
close_error(fd1);
close_error(fd2);
exit(99);
}
} while (r == 1024);
10,11Top
 * @file_from: first file
 * @file_to: second file
 * @fd1: file descriptor
 * @fd2: file descreptor
 */
void open_file(const char *file_from, const char *file_to, int *fd1, int *fd2)
{
*fd1 = open(file_from, O_RDONLY);
if (!file_from || *fd1 == -1)
{
dprintf(STDERR_FILENO, "Error: Can't read from file %s\n", file_from);
exit(98);
}
*fd2 = open(file_to, O_WRONLY | O_CREAT | O_TRUNC, 0664);
if (*fd2 == -1)
{
dprintf(STDERR_FILENO, "Error: Can't write to %s\n", file_to);
close(*fd2);
exit(99);
}
}
/**
 * close_error - prints file descreptor close  error
 * @fd: the file descriptor of the file to close
 */
void close_error(int fd)
{
if (close(fd) == -1)
{
dprintf(STDERR_FILENO, "Error: Can't close fd %d\n", fd);
exit(100);
}
}
/**
 * main - copies the content of a file to another file
10,119%
#include "main.h"

/**
 * open_file - opens files
 * @file_from: first file
 * @file_to: second file
 * @fd1: file descriptor
 * @fd2: file descreptor
 */
void open_file(const char *file_from, const char *file_to, int *fd1, int *fd2)
{
*fd1 = open(file_from, O_RDONLY);
if (!file_from || *fd1 == -1)
{
dprintf(STDERR_FILENO, "Error: Can't read from file %s\n", file_from);
exit(98);
}
*fd2 = open(file_to, O_WRONLY | O_CREAT | O_TRUNC, 0664);
if (*fd2 == -1)
{
dprintf(STDERR_FILENO, "Error: Can't write to %s\n", file_to);
close(*fd2);
exit(99);
}
}
/**
 * close_error - prints file descreptor close  error
 * @fd: the file descriptor of the file to close
 */
void close_error(int fd)
{
if (close(fd) == -1)
{
dprintf(STDERR_FILENO, "Error: Can't close fd %d\n", fd);
exit(100);
}
}
/**
 * main - copies the content of a file to another file
 * @ac: number of arguments
 * @av: the arguments passed to the program
 * Return: always 0;
 */
int main(int ac, char **av)
{
ssize_t r, w;
char buffer[1024];
int fd1 = -1, fd2 = -1;

if (ac != 3)
{
dprintf(2, "Usage: cp file_from file_to\n");
exit(97);
}
open_file(av[1], av[2], &fd1, &fd2);
do {
r = read(fd1, buffer, 1024);
if (r == -1)
{
dprintf(STDERR_FILENO, "Error: Can't read from %d\n", fd1);
close_error(fd1);
close_error(fd2);
exit(98);
}
w = write(fd2, buffer, r);
if (w == -1)
{
dprintf(STDERR_FILENO, "Error: Can't write to %d\n", fd2);
close_error(fd1);
close_error(fd2);
exit(99);
}
} while (r == 1024);
10,11Top
 * @file_from: first file
 * @file_to: second file
 * @fd1: file descriptor
 * @fd2: file descreptor
 */
void open_file(const char *file_from, const char *file_to, int *fd1, int *fd2)
{
*fd1 = open(file_from, O_RDONLY);
if (!file_from || *fd1 == -1)
{
dprintf(STDERR_FILENO, "Error: Can't read from file %s\n", file_from);
exit(98);
}
*fd2 = open(file_to, O_WRONLY | O_CREAT | O_TRUNC, 0664);
if (*fd2 == -1)
{
dprintf(STDERR_FILENO, "Error: Can't write to %s\n", file_to);
close(*fd2);
exit(99);
}
}
/**
 * close_error - prints file descreptor close  error
 * @fd: the file descriptor of the file to close
 */
void close_error(int fd)
{
if (close(fd) == -1)
{
dprintf(STDERR_FILENO, "Error: Can't close fd %d\n", fd);
exit(100);
}
}
/**
 * main - copies the content of a file to another file
10,119%
#include "main.h"

/**
 * open_file - opens files
 * @file_from: first file
 * @file_to: second file
 * @fd1: file descriptor
 * @fd2: file descreptor
 */
void open_file(const char *file_from, const char *file_to, int *fd1, int *fd2)
{
*fd1 = open(file_from, O_RDONLY);
if (!file_from || *fd1 == -1)
{
dprintf(STDERR_FILENO, "Error: Can't read from file %s\n", file_from);
exit(98);
}
*fd2 = open(file_to, O_WRONLY | O_CREAT | O_TRUNC, 0664);
if (*fd2 == -1)
{
dprintf(STDERR_FILENO, "Error: Can't write to %s\n", file_to);
close(*fd2);
exit(99);
}
}
/**
 * close_error - prints file descreptor close  error
 * @fd: the file descriptor of the file to close
 */
void close_error(int fd)
{
if (close(fd) == -1)
{
dprintf(STDERR_FILENO, "Error: Can't close fd %d\n", fd);
exit(100);
}
}
/**
 * main - copies the content of a file to another file
 * @ac: number of arguments
 * @av: the arguments passed to the program
 * Return: always 0;
 */
int main(int ac, char **av)
{
ssize_t r, w;
char buffer[1024];
int fd1 = -1, fd2 = -1;

if (ac != 3)
{
dprintf(2, "Usage: cp file_from file_to\n");
exit(97);
}
open_file(av[1], av[2], &fd1, &fd2);
do {
r = read(fd1, buffer, 1024);
if (r == -1)
{
dprintf(STDERR_FILENO, "Error: Can't read from %d\n", fd1);
close_error(fd1);
close_error(fd2);
exit(98);
}
w = write(fd2, buffer, r);
if (w == -1)
{
dprintf(STDERR_FILENO, "Error: Can't write to %d\n", fd2);
close_error(fd1);
close_error(fd2);
exit(99);
}
} while (r == 1024);
   11,1 Top
 * @fd: the file descriptor of the file to close
















exit(100);


root@357152dbd310:~/alx-low_level_programming/0x15-file_io# vi 3-cp.c #include "main.h"













exit(100);




root@357152dbd310:~/alx-low_level_programming/0x15-file_io# gcc -Wall -pedantic -Werror -Wextra -std=gnu89 3-cp.c -o cp
root@357152dbd310:~/alx-low_level_programming/0x15-file_io# betty 3-cp.c 
========== 3-cp.c ==========
open_file
close_error
main
root@357152dbd310:~/alx-low_level_programming/0x15-file_io# git add . && git commit -m 'updated open func' && git push
hhhhhhhh
hhhhhhhhhhhhnnnnnnn
kkkkkkk
iuffjnbcfgvvvvvvvvvv
kkkkkkk
yyyyyy
ppppppppp
Why you should think twice before putting pictures on social media.
(What you always wanted to know about @Incitatous)
#PrivacyAware
http://imgur.com/a/Mq1tc
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
~                                                                                                                                                                                                                                  
-- INSERT --8,1All
Why you should think twice before putting pictures on social media.
(What you always wanted to know about @Incitatous)
#PrivacyAware
http://imgur.com/a/Mq1tc
